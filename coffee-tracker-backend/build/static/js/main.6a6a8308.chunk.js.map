{"version":3,"sources":["coffeemug.js","output.js","input.js","edit.js","list.js","admin.js","Home/Home.js","Callback/Callback.js","history.js","Auth/auth0-variables.js","Auth/Auth.js","App.js","index.js","Callback/loading.svg"],"names":["Coffeemug","_this","this","coffeeMugs","i","props","purchased","push","react_default","a","createElement","className","map","src","alt","width","height","key","name","Component","Output","purchasers","data","forEach","person","purchaser","find","undefined","length","coffeemug","Input","state","id","message","coffee","datePurchased","date","putDataToDB","event","preventDefault","currentIds","idToBeAdded","includes","axios","post","_this2","type","required","onChange","e","setState","target","value","autoComplete","onClick","Edit","idToDelete","idToUpdate","objectToUpdate","deleteFromDB","idTodelete","objIdToDelete","dat","_id","delete","updateDB","updateToApply","updateToDate","objIdToUpdate","update","List","reversed","reverse","dist_default","format","Admin","auth","login","logout","renewSession","localStorage","getItem","isAuthenticated","Button","bsStyle","bind","esm","input","list","edit","withRouter","Home","admin","style","cursor","Callback","position","display","justifyContent","top","bottom","left","right","backgroundColor","loading","createHistory","AUTH_CONFIG","domain","clientId","callbackUrl","Auth","Object","classCallCheck","auth0","WebAuth","clientID","redirectUri","responseType","scope","handleAuthentication","getAccessToken","getIdToken","authorize","parseHash","err","authResult","accessToken","idToken","setSession","history","replace","console","log","alert","concat","error","setItem","expiresAt","expiresIn","Date","getTime","checkSession","error_description","removeItem","App","intervalIsSet","hasInitialData","getDataFromDb","fetch","then","json","res","_ref","location","test","hash","socket","io","connect","on","Router","Route","path","render","output","exact","src_Home_Home","assign","src_Callback_Callback","ReactDOM","BrowserRouter","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6a6a8308.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nclass Coffeemug extends Component {\r\n\r\n  render() {\r\n    var coffeeMugs = [];\r\n    for(var i=0; i<this.props.purchased; i++){\r\n      coffeeMugs.push(\"mug\" + i);\r\n    }\r\n\r\n    return (\r\n      <ul className=\"coffeeMug\">\r\n        {coffeeMugs.map(purchased => (\r\n                <img src=\"./coffee.ico\" alt=\"icon of a coffee mug\" width=\"50\" height=\"50\" key={this.props.name + purchased}></img>\r\n            ))}\r\n      </ul>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Coffeemug;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Coffeemug from './coffeemug.js';\r\nclass Output extends Component {\r\n  render() {\r\n\r\n    let purchasers = [];\r\n    this.props.data.forEach( person => {\r\n      let purchaser = purchasers.find(purchaser => {return purchaser.name === person.name});\r\n\r\n      if (purchaser !== undefined) {\r\n        purchaser.purchased++\r\n      }else {\r\n        purchasers.push({name:person.name, purchased: 1})\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"bigPadding\">\r\n        <ul>\r\n          {purchasers.length <= 0\r\n            ? \"NO DB ENTRIES YET\"\r\n            : purchasers.map(purchaser => (\r\n                <div className=\"outputBox\" key={purchaser.name}>\r\n                  <h2 className=\"coffeeMugName\">{purchaser.name}:</h2>\r\n                  <Coffeemug purchased={purchaser.purchased} name={purchaser.name} />\r\n                </div>\r\n              ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Output;\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './App.css';\r\n\r\nclass Input extends Component {\r\n\r\n  // initialize our state\r\n    state = {\r\n      id: 0,\r\n      message: null,\r\n      name: null,\r\n      coffee: null,\r\n      datePurchased: null,\r\n      date: null,\r\n    };\r\n\r\n\r\n\r\n    // our put method that uses our backend api\r\n    // to create new query into our data base\r\n    putDataToDB = (message, name, coffee, date, datePurchased, event) => {\r\n\r\n      event.preventDefault(); // stop the page from refreshing\r\n\r\n      // just a note, here, in the front end, we use the id key of our data object\r\n      // in order to identify which we want to Update or delete.\r\n      // for our back end, we use the object id assigned by MongoDB to modify\r\n      // data base entries\r\n\r\n      let currentIds = this.props.data.map(data => data.id);\r\n      let idToBeAdded = 0;\r\n      while (currentIds.includes(idToBeAdded)) {\r\n        ++idToBeAdded;\r\n      }\r\n\r\n      axios.post(\"/api/putData\", {\r\n        id: idToBeAdded,\r\n        message: message,\r\n        name: name,\r\n        coffee: coffee,\r\n        date: date,\r\n        datePurchased: datePurchased,\r\n      });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"bigPadding\">\r\n\r\n        <div className=\"smallPadding\">\r\n        <h4>Add a coffee to the database</h4>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            onChange={e => this.setState({ coffee: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"smallPadding\">\r\n        <h4>Who bought the coffee?</h4>\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"given-name\"\r\n            required\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"smallPadding\">\r\n        <h4>What date was it purchased?</h4>\r\n          <input\r\n            type=\"date\"\r\n            onChange={e => this.setState({ datePurchased: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"smallPadding\">\r\n        <h4>What date was it opened?</h4>\r\n          <input\r\n            type=\"date\"\r\n            onChange={e => this.setState({ date: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"smallPadding\">\r\n        <h4>Add a note about the coffee</h4>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ message: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"smallPadding\">\r\n\r\n          <button onClick={(event) => this.putDataToDB(this.state.message, this.state.name, this.state.coffee, this.state.date, this.state.datePurchased, event)}>\r\n\r\n            <h4>Add to database</h4>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './App.css';\r\n\r\n\r\nclass Edit extends Component {\r\n\r\n  // initialize our state\r\n    state = {\r\n      idToDelete: null,\r\n      idToUpdate: null,\r\n      objectToUpdate: null,\r\n    };\r\n\r\n\r\n    // our delete method that uses our backend api\r\n    // to remove existing database information\r\n    deleteFromDB = idTodelete => {\r\n      let objIdToDelete = null;\r\n      this.props.data.forEach(dat => {\r\n        if (dat.id == idTodelete) {\r\n          objIdToDelete = dat._id;\r\n        }\r\n      });\r\n\r\n      axios.delete(\"/api/deleteData\", {\r\n        data: {\r\n          id: objIdToDelete\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    // our update method that uses our backend api\r\n    // to overwrite existing data base information\r\n    updateDB = (idToUpdate, updateToApply, updateToDate) => {\r\n      let objIdToUpdate = null;\r\n      this.props.data.forEach(dat => {\r\n        if (dat.id == idToUpdate) {\r\n          objIdToUpdate = dat._id;\r\n        }\r\n      });\r\n\r\n      axios.post(\"/api/updateData\", {\r\n        id: objIdToUpdate,\r\n        update: {\r\n          message: updateToApply,\r\n          date: updateToDate}\r\n      });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"outputBoxEdit\">\r\n\r\n        <div className=\"deleting\">\r\n            <div className=\"smallPadding\">\r\n              <h4>Id of item to delete</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => this.setState({ idToDelete: e.target.value })}\r\n                />\r\n            </div>\r\n\r\n            <div className = \"smallPadding\">\r\n              <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\r\n                <h4>DELETE</h4>\r\n              </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"editing\">\r\n            <div className=\"smallPadding\">\r\n              <h4>Id of item to update</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => this.setState({ idToUpdate: e.target.value })}\r\n                />\r\n              <h4>New message</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={e => this.setState({ updateToApply: e.target.value })}\r\n                />\r\n              <h4>New opened date</h4>\r\n                <input\r\n                  type=\"date\"\r\n                  onChange={e => this.setState({ updateToDate: e.target.value })}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"smallPadding\">\r\n              <button\r\n                onClick={() =>\r\n                  this.updateDB(this.state.idToUpdate, this.state.updateToApply, this.state.updateToDate)\r\n                }\r\n              >\r\n                <h4>UPDATE</h4>\r\n              </button>\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport './App.css';\r\n\r\nclass List extends Component {\r\n\r\n  render() {\r\n\r\n    if (this.props.data && this.props.data.length < 1) return <p>No coffee entered yet</p>;\r\n\r\n    this.reversed = this.props.data.reverse();\r\n\r\n    return (\r\n      <div className=\"bigPadding\">\r\n        <div className=\"smallPadding\">\r\n        <table className=\"table\">\r\n          <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Date Purchased</th>\r\n            <th>Date Opened</th>\r\n            <th>Coffee</th>\r\n            <th>Note</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\t\t\t\t\t{this.reversed.map(data => (\r\n          <tr key={data.id}>\r\n            <td>\r\n\t\t\t\t\t\t\t{data.id}\r\n            </td>\r\n            <td>\r\n\t\t\t\t\t\t\t{data.name}\r\n            </td>\r\n            <td>\r\n              {\r\n                ((typeof(data.datePurchased) === 'undefined') || (data.datePurchased === null))\r\n                  ? <p>No data</p>\r\n                  : <Moment format=\"DD/MM/YYYY\">{data.datePurchased}</Moment>\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                ((typeof(data.date) === 'undefined') || (data.date === null))\r\n                  ? <p>No data</p>\r\n                  : <Moment format=\"DD/MM/YYYY\">{data.date}</Moment>\r\n              }\r\n            </td>\r\n            <td>\r\n\t\t\t\t\t\t\t{data.coffee}\r\n            </td>\r\n            <td>\r\n\t\t\t\t\t\t\t{data.message}\r\n            </td>\r\n          </tr>\r\n\t\t\t\t\t))}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Button } from 'react-bootstrap';\r\nimport './App.css';\r\nimport Input from './input.js';\r\nimport Edit from './edit.js';\r\nimport List from './list.js';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport Output from './output.js';\r\n\r\nimport {Route, Link, withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Admin extends Component {\r\n\r\n  login() {\r\n    this.props.auth.login();\r\n  }\r\n\r\n  logout() {\r\n    this.props.auth.logout();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { renewSession } = this.props.auth;\r\n\r\n    if (localStorage.getItem('isLoggedIn') === 'true') {\r\n      renewSession();\r\n    }\r\n  }\r\n\r\n\r\n    render() {\r\n\r\n      const { isAuthenticated } = this.props.auth;\r\n\r\n      return (\r\n        <div className=\"bigPadding\">\r\n              {\r\n                !isAuthenticated() && (\r\n                    <Button\r\n                      id=\"qsLoginBtn\"\r\n                      bsStyle=\"primary\"\r\n                      className=\"btn-margin\"\r\n                      onClick={this.login.bind(this)}\r\n                    >\r\n                      Log In\r\n                    </Button>\r\n                  )\r\n              }\r\n              {\r\n                isAuthenticated() && (\r\n                    <Button\r\n                      id=\"qsLogoutBtn\"\r\n                      bsStyle=\"primary\"\r\n                      className=\"btn-margin\"\r\n                      onClick={this.logout.bind(this)}\r\n                    >\r\n                      Log Out\r\n                    </Button>\r\n                  )\r\n              }\r\n\r\n            <Tabs>\r\n              <TabList>\r\n                <Tab><h3>Add a coffee</h3></Tab>\r\n                <Tab><h3>See all entries</h3></Tab>\r\n                <Tab><h3>Edit an entry</h3></Tab>\r\n              </TabList>\r\n\r\n              <TabPanel>\r\n                <Input data={this.props.data}/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <List data={this.props.data}/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <Edit data={this.props.data}/>\r\n              </TabPanel>\r\n            </Tabs>\r\n\r\n        </div>\r\n      );\r\n\r\n    }\r\n  }\r\n\r\nexport default withRouter(Admin);\r\n","import React, { Component } from 'react';\r\nimport Admin from '../admin.js';\r\nimport '../App.css';\r\n\r\nclass Home extends Component {\r\n\r\n  login() {\r\n    this.props.auth.login();\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    return (\r\n      <div>\r\n        {\r\n          isAuthenticated() && (\r\n            <div>\r\n              <h4 className=\"bigPadding\">\r\n                You are logged in!\r\n              </h4>\r\n\r\n              <Admin data={this.props.data } auth={this.props.auth} />\r\n            </div>\r\n            )\r\n        }\r\n        {\r\n          !isAuthenticated() && (\r\n              <h4 className=\"bigPadding\">\r\n                You are not logged in! Please{' '}\r\n                <a\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={this.login.bind(this)}\r\n                >\r\n                  Log In\r\n                </a>\r\n                {' '}to continue.\r\n              </h4>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport loading from './loading.svg';\r\n\r\nclass Callback extends Component {\r\n  render() {\r\n    const style = {\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      height: '100vh',\r\n      width: '100vw',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'white',\r\n    }\r\n\r\n    return (\r\n      <div style={style}>\r\n        <img src={loading} alt=\"loading\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Callback;\r\n","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()\r\n","export const AUTH_CONFIG = {\r\n  domain: 'coffee-tracker.eu.auth0.com',\r\n  clientId: 'Dn61gamMNP0DhK5410emcTc4BholdXGc',\r\n  callbackUrl: 'http://localhost:3000/callback'\r\n}\r\n","import history from '../history';\r\nimport auth0 from 'auth0-js';\r\nimport { AUTH_CONFIG } from './auth0-variables';\r\n\r\nexport default class Auth {\r\n  accessToken;\r\n  idToken;\r\n  expiresAt;\r\n\r\n  auth0 = new auth0.WebAuth({\r\n    domain: AUTH_CONFIG.domain,\r\n    clientID: AUTH_CONFIG.clientId,\r\n    redirectUri: AUTH_CONFIG.callbackUrl,\r\n    responseType: 'token id_token',\r\n    scope: 'openid'\r\n  });\r\n\r\n  constructor() {\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.getAccessToken = this.getAccessToken.bind(this);\r\n    this.getIdToken = this.getIdToken.bind(this);\r\n    this.renewSession = this.renewSession.bind(this);\r\n  }\r\n\r\n  login() {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  handleAuthentication() {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult);\r\n      } else if (err) {\r\n        history.replace('/admin');\r\n        console.log(err);\r\n        alert(`Error: ${err.error}. Check the console for further details.`);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set isLoggedIn flag in localStorage\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n\r\n    // Set the time that the access token will expire at\r\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n    this.accessToken = authResult.accessToken;\r\n    this.idToken = authResult.idToken;\r\n    this.expiresAt = expiresAt;\r\n\r\n    // navigate to the home route\r\n    history.replace('/admin');\r\n  }\r\n\r\n  renewSession() {\r\n    this.auth0.checkSession({}, (err, authResult) => {\r\n       if (authResult && authResult.accessToken && authResult.idToken) {\r\n         this.setSession(authResult);\r\n       } else if (err) {\r\n         this.logout();\r\n         console.log(err);\r\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\r\n       }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    // Remove tokens and expiry time\r\n    this.accessToken = null;\r\n    this.idToken = null;\r\n    this.expiresAt = 0;\r\n\r\n    // Remove isLoggedIn flag from localStorage\r\n    localStorage.removeItem('isLoggedIn');\r\n\r\n    // navigate to the home route\r\n    history.replace('/admin');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the\r\n    // access token's expiry time\r\n    let expiresAt = this.expiresAt;\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Route, Router, withRouter, Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport Output from './output.js';\r\nimport io from 'socket.io-client';\r\nimport Home from './Home/Home';\r\nimport Callback from './Callback/Callback';\r\nimport Auth from './Auth/Auth';\r\nimport history from './history';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n      data: [],\r\n      intervalIsSet: false,\r\n      hasInitialData: false,\r\n    };\r\n\r\n    socket;\r\n\r\n    // when component mounts, first thing it does is fetch all existing data in our db\r\n    // then we incorporate a polling logic so that we can easily see if our db has\r\n    // changed and implement those changes into our UI\r\n    componentDidMount() {\r\n      this.getDataFromDb();\r\n      //(\"http://127.0.0.1:3001\") for local, () for live\r\n      this.socket = io.connect();\r\n      //this is where we are listening for the socket.io message sent from the server, which tells us to go and get the data again if something has changed.\r\n      this.socket.on(\"NewData\", this.getDataFromDb);\r\n    };\r\n\r\n\r\n    // our first get method that uses our backend api to\r\n    // fetch data from our data base\r\n    getDataFromDb = () => {\r\n      fetch(\"/api/getData\")\r\n        .then(data => data.json())\r\n        .then(res => {\r\n          this.setState({ data: res.data, hasInitialData:true })\r\n        });\r\n    };\r\n\r\n    auth = new Auth();\r\n\r\n    handleAuthentication = ({location}) => {\r\n      if (/access_token|id_token|error/.test(location.hash)) {\r\n        this.auth.handleAuthentication();\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n      if (!this.state.hasInitialData ) return <h1>Loading...</h1>;\r\n\r\n      return (\r\n\r\n        <Router history={history}>\r\n          <div>\r\n            <Route path=\"/\" render={(props) => <Output data={this.state.data}/>} />\r\n            <Route exact path=\"/admin\" render={(props) => <Home data={this.state.data } auth={this.auth} {...props} />} />\r\n            <Route path=\"/callback\" render={(props) => {\r\n              this.handleAuthentication(props);\r\n              return <Callback {...props} />\r\n            }}/>\r\n          </div>\r\n        </Router>\r\n\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}